# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  slack: circleci/slack@4.12.5
  # lighthouse-check: foo-software/lighthouse-check@0.0.8
slack-fail-post-step: &slack-fail-post-step
  context:
    - tls-production-health-check-context
  post-steps:
    - slack/notify:
        branch_pattern: .+
        event: fail
        template: basic_fail_1
        mentions: '@stdev'
        channel: C05PJHA3NTD
    - slack/notify:
        branch_pattern: .+
        event: pass
        template: basic_success_1
        channel: C05PJHA3NTD
        
jobs:
  
  production-health-check-tests:
    machine: true
    resource_class: nukengprod/pubsys-circleci-runner-dev
    # docker:
    #   - image: cimg/base:2023.08
    steps:
      - checkout
      - run:
          name: Install Node.js
          command: |
            cd ~
            curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
            sudo apt-get install -y nodejs
            sudo apt-get install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
      # install dependencies
      - run:
          name: Install Dependencies
          command: |
              cd TLS_E2E_Automation 
              npm install
      - run:
          name: Install Cypress 
          command: |
            pwd
            cd TLS_E2E_Automation
            npm add cypress --dev 
            npm add -D cypress-wait-until

      - run:
          name: Run production health check tests
          command: |
            pwd
            cd TLS_E2E_Automation
            pwd
            npm run cypress:run-healthcheck

      - run :
          name: Generating cucmber report
          when: always 
          command : |
            pwd
            cd TLS_E2E_Automation
            pwd
            node ./cypress/support/cucumberreport.js
      - run :      
          name: Compressing Report
          when: always
          command: |
            pwd
            cd TLS_E2E_Automation
            pwd
            echo "${CIRCLE_WORKFLOW_JOB_ID}"
            tar -cvzf ./cypress/cucmberReport.tar cypress/cucumberreports/cucumber-htmlreport.html

      - run :      
          name: Updating environmental url
          when: always
          command: |
           ARTIFACT_URL="https://output.circle-artifacts.com/output/job/${CIRCLE_WORKFLOW_JOB_ID}/artifacts/0/TLS_E2E_Automation/cypress/cucmberReport.tar" 
           echo "Artifact URL: $ARTIFACT_URL"

      - store_artifacts:
          path: TLS_E2E_Automation/cypress/productionhealthcheckscreenshots

      - store_artifacts:
          path: TLS_E2E_Automation/cypress/videos

      - store_artifacts:
          path:  TLS_E2E_Automation/cypress/cucmberReport.tar

      - run:
          name: Send Cucumber report to Slack
          command: |
            pwd
            cd TLS_E2E_Automation
            ls
            message="Please click on the link to download the report: ${ARTIFACT_URL}"
            curl -X POST -H 'Content-type: application/json' --data '{
            "channel": "C05PJHA3NTD",
            "username": "CircleCI",
            "text": "'"${message}"'"
            }' "$SLACK_WEBHOOK_URL"
     

  


workflows:
  tests:
    jobs:
  
      - production-health-check-tests:
          <<: *slack-fail-post-step
      
        
         
          
        








