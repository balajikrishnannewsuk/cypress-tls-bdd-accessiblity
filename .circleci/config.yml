# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  slack: circleci/slack@4.12.5
  # lighthouse-check: foo-software/lighthouse-check@0.0.8
slack-fail-post-step: &slack-fail-post-step
  context:
    - tls-production-health-check-context
  post-steps:
    - slack/notify:
        branch_pattern: .+
        event: always
        template: basic_fail_1
        channel: C05PJHA3NTD
        
jobs:
  # test: 
  #   executor: lighthouse-check/default
  #   steps:
  #     - lighthouse-check/audit:
  #         urls: https://www.google.com/
  #     # - slack/notify:
  #     #     channel: C03SQRV07R8
          
  #     - lighthouse-check/validate-status:
  #         minAccessibilityScore: '50'
  #         minBestPracticesScore: '50'
  #         minPerformanceScore: '99'
  #         minProgressiveWebAppScore: '50'
  #         minSeoScore: '50'
  
  production-health-check-tests:
    machine: true
    resource_class: nukengprod/pubsys-circleci-runner-dev
    # docker:
    #   - image: cimg/base:2023.08
    steps:
      - checkout
      - run:
          name: Install Node.js
          command: |
            cd ~
            curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
            sudo apt-get install -y nodejs
            sudo apt-get install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
      # install dependencies
      - run:
          name: Install Dependencies
          command: |
              cd TLS_E2E_Automation 
              npm install
      - run:
          name: Install Cypress 
          command: |
            pwd
            cd TLS_E2E_Automation
            npm add cypress --dev 
            npm add -D cypress-wait-until
      - run:
          name: Run production health check tests
          command: |
            pwd
            cd TLS_E2E_Automation
            pwd
            npm run cypress:run-healthcheck

      - run :
          name: Generating cucmber report
          when: always 
          command : |
            pwd
            cd TLS_E2E_Automation
            pwd
            node ./cypress/support/cucumberreport.js
      - run :      
          name: Compressing Report
          command: |
            pwd
            cd TLS_E2E_Automation
            pwd
            tar -cvzf ./cypress/cucmberReport.tar cypress/cucumberreports/cucumber-htmlreport.html

      - run:
          name: Send Cucumber report to Slack
          command: |
            curl -X POST -H 'Content-type: application/json' --data '{
              "channel": "C05PJHA3NTD",
              "username": "CircleCI",
              "text": "Cucumber test report is available!",
              "attachments": [
                {
                  "fallback": "Cucumber Test Report",
                  "color": "#36a64f",
                  "title": "Cucumber Test Report",
                  "title_link": "TLS_E2E_Automation/cypress/cucmberReport.tar",
                  "text": "Here is the latest Cucumber test report.",
                  "fields": [
                    {
                      "title": "Build Number",
                      "value": "${CIRCLE_BUILD_NUM}",
                      "short": true
                    }
                  ]
                }
              ]
            }' https://hooks.slack.com/services/your/slack/webhook/url

            
      - store_artifacts:
          path: TLS_E2E_Automation/cypress/productionhealthcheckscreenshots
      - store_artifacts:
          path: TLS_E2E_Automation/cypress/videos
      - store_artifacts:
          path:  TLS_E2E_Automation/cypress/cucmberReport.tar
         

      
   
  
  # cypress-tests:
  #   docker:
  #     - image: cimg/base:2021.04
  #   steps:
  #     - checkout
  #     - restore_cache:
  #         key: v1-deps-{{ checksum "package.json" }}
  #     - run:
  #         name: Install Node.js
  #         command: |
  #           cd ~
  #           curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
  #           sudo apt-get install -y nodejs
  #           sudo apt-get install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
  #     # install dependencies
  #     - run:
  #         name: install dependencies
  #         command: |
  #             cd TLS_E2E_Automation 
  #             npm install
  #     - save_cache:
  #         key: v1-deps-{{ checksum "package.json" }}
  #         paths:
  #           - node_modules
  #     - run:
  #         name: Install Cypress 
  #         command: |
  #           pwd
  #           cd TLS_E2E_Automation
  #           npm add cypress --dev
  #           npm add -D cypress-wait-until
  #           npm add -D faker 
  #     - run:
  #         name: Run Cypress tests
  #         command: |
  #           pwd
  #           cd TLS_E2E_Automation
  #           pwd
  #           npx cypress run  --env ENV=dev --spec 'cypress/e2e/PERFORMANCE/Perfromance.cy.js'
  #     - run:
  #         name: Creating Dummy Artifacts
  #         command: |
  #           echo TLS_E2E_Automation/cypress/screenshots/lhreport.html > /tmp/art-1
  #            mkdir /tmp/artifacts
  #     - store_artifacts:
  #         path: /tmp/art-1
  #         destination: artifact-file
  #     - store_artifacts:
  #         path: TLS_E2E_Automation/cypress/screenshots
              
          
workflows:
  tests:
    jobs:
      # - cypress-tests
      # - test
      - production-health-check-tests:
          <<: *slack-fail-post-step
          
        








