{"status":"finished","startedTestsAt":"2023-09-06T10:02:33.623Z","endedTestsAt":"2023-09-06T10:04:23.957Z","totalDuration":110334,"totalSuites":1,"totalTests":12,"totalPassed":12,"totalPending":0,"totalFailed":0,"totalSkipped":0,"runs":[{"stats":{"suites":1,"tests":12,"passes":12,"pending":0,"skipped":0,"failures":0,"duration":110334,"startedAt":"2023-09-06T10:02:33.623Z","endedAt":"2023-09-06T10:04:23.957Z"},"reporter":"spec","reporterStats":{"suites":1,"tests":12,"passes":12,"pending":0,"failures":0,"start":"2023-09-06T10:02:33.626Z","end":"2023-09-06T10:04:23.982Z","duration":110356},"hooks":[{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  if (environment != 'healthcheck') {\n    if (Cypress.config('firstRun')) {\n      cy.log('Open the TLS Home page for environment =>' + Cypress.env('ENV')); //Fetch the environment from the command line\n\n      var _environment = Cypress.env('ENV'); //Corresponded environment url is picked\n\n\n      var url = Cypress.env(\"\".concat(_environment, \"_url\")); //Load the URL\n\n      cy.visit(url); //Accept the cookie banner\n\n      cy.acceptCookieBanner();\n      /**\n          * If needed can add(err, runnable)\n             */\n\n      Cypress.on(\"uncaught:exception\", function (err, runnable) {\n        // returning false here prevents Cypress from\n        // failing the test\n        return false;\n      });\n      Cypress.config('firstRun', false);\n      cy.log('TLS Home page for environment =>' + Cypress.env('ENV') + 'loaded');\n    }\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  if (environment != 'healthcheck') {\n    if (Cypress.config('firstRun')) {\n      cy.log('Open the TLS Home page for environment =>' + Cypress.env('ENV')); //Fetch the environment from the command line\n\n      var _environment = Cypress.env('ENV'); //Corresponded environment url is picked\n\n\n      var url = Cypress.env(\"\".concat(_environment, \"_url\")); //Load the URL\n\n      cy.visit(url); //Accept the cookie banner\n\n      cy.acceptCookieBanner();\n      /**\n          * If needed can add(err, runnable)\n             */\n\n      Cypress.on(\"uncaught:exception\", function (err, runnable) {\n        // returning false here prevents Cypress from\n        // failing the test\n        return false;\n      });\n      Cypress.config('firstRun', false);\n      cy.log('TLS Home page for environment =>' + Cypress.env('ENV') + 'loaded');\n    }\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    cy.then(() => testState.onStartTest());\n  }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {}"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {}"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n    window.testState = testState;\n\n    const failHandler = (_, err) => {\n      testState.onFail(err);\n    };\n\n    Cypress.mocha.getRunner().on(\"fail\", failHandler);\n  }"},{"hookName":"after each","title":["\"after each\" hook"],"body":"() => {\n  const screenshotsFolder = Cypress.config(\"screenshotsFolder\");\n  if (window.cucumberJson?.generate) {\n    const testState = window.testState;\n    const stepResult =\n      testState.runTests[testState.currentScenario.name][testState.currentStep];\n    if (stepResult?.status === \"failed\") {\n      const screenshotFileName = `${testState.feature.name} -- ${testState.currentScenario.name} (failed).png`;\n      cy.readFile(\n        `${screenshotsFolder}/${Cypress.spec.name}/${screenshotFileName}`,\n        \"base64\"\n      ).then((imgData) => {\n        stepResult.attachment = {\n          data: imgData,\n          media: { type: \"image/png\" },\n          index: testState.currentStep,\n          testCase: testState.formatTestCase(testState.currentScenario),\n        };\n      });\n    }\n  }\n}"},{"hookName":"after each","title":["\"after each\" hook"],"body":"function () {\n    if (testState.currentScenario && testState.currentScenario.shouldRun) {\n      cy.then(() =>\n        resolveAndRunAfterHooks.call(\n          this,\n          testState.currentScenario.tags,\n          testState.feature.name\n        )\n      );\n    }\n  }"},{"hookName":"after each","title":["\"after each\" hook"],"body":"() => {\n  const screenshotsFolder = Cypress.config(\"screenshotsFolder\");\n  if (window.cucumberJson?.generate) {\n    const testState = window.testState;\n    const stepResult =\n      testState.runTests[testState.currentScenario.name][testState.currentStep];\n    if (stepResult?.status === \"failed\") {\n      const screenshotFileName = `${testState.feature.name} -- ${testState.currentScenario.name} (failed).png`;\n      cy.readFile(\n        `${screenshotsFolder}/${Cypress.spec.name}/${screenshotFileName}`,\n        \"base64\"\n      ).then((imgData) => {\n        stepResult.attachment = {\n          data: imgData,\n          media: { type: \"image/png\" },\n          index: testState.currentStep,\n          testCase: testState.formatTestCase(testState.currentScenario),\n        };\n      });\n    }\n  }\n}"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n  if (environment != 'healthcheck') {\n    cy.log('Test Secenario Completed');\n    Cypress.config('firstRun', true);\n  }\n}"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n    cy.then(() => testState.onFinishTest()).then(() => {\n      if (window.cucumberJson && window.cucumberJson.generate) {\n        const json = generateCucumberJson(testState);\n        writeCucumberJsonFile(json);\n      }\n    });\n  }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n  if (environment != 'healthcheck') {\n    cy.log('Test Secenario Completed');\n    Cypress.config('firstRun', true);\n  }\n}"}],"tests":[{"title":["Validating TLS production site","Validate TLS home page"],"state":"passed","body":"function () {\n      const state = window.testState;\n      return cy\n        .then(() => state.onStartScenario(scenario, indexedSteps))\n        .then(() =>\n          resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n        )\n        .then(() =>\n          indexedSteps.forEach((step) =>\n            stepTest.call(this, state, step, rowData)\n          )\n        )\n        .then(() => state.onFinishScenario(scenario));\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":11180,"duration":13275,"startedAt":"2023-09-06T10:02:38.390Z","screenshots":[]}]},{"title":["Validating TLS production site","Validate TLS buy page"],"state":"passed","body":"function () {\n      const state = window.testState;\n      return cy\n        .then(() => state.onStartScenario(scenario, indexedSteps))\n        .then(() =>\n          resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n        )\n        .then(() =>\n          indexedSteps.forEach((step) =>\n            stepTest.call(this, state, step, rowData)\n          )\n        )\n        .then(() => state.onFinishScenario(scenario));\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":24482,"duration":34975,"startedAt":"2023-09-06T10:02:51.692Z","screenshots":[]}]},{"title":["Validating TLS production site","Validate TLS Archive page"],"state":"passed","body":"function () {\n      const state = window.testState;\n      return cy\n        .then(() => state.onStartScenario(scenario, indexedSteps))\n        .then(() =>\n          resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n        )\n        .then(() =>\n          indexedSteps.forEach((step) =>\n            stepTest.call(this, state, step, rowData)\n          )\n        )\n        .then(() => state.onFinishScenario(scenario));\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":59486,"duration":12503,"startedAt":"2023-09-06T10:03:26.696Z","screenshots":[]}]},{"title":["Validating TLS production site","Validate TLS New To The TLS page"],"state":"passed","body":"function () {\n      const state = window.testState;\n      return cy\n        .then(() => state.onStartScenario(scenario, indexedSteps))\n        .then(() =>\n          resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n        )\n        .then(() =>\n          indexedSteps.forEach((step) =>\n            stepTest.call(this, state, step, rowData)\n          )\n        )\n        .then(() => state.onFinishScenario(scenario));\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":71997,"duration":4751,"startedAt":"2023-09-06T10:03:39.207Z","screenshots":[]}]},{"title":["Validating TLS production site","Validate TLS Highlights page"],"state":"passed","body":"function () {\n      const state = window.testState;\n      return cy\n        .then(() => state.onStartScenario(scenario, indexedSteps))\n        .then(() =>\n          resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n        )\n        .then(() =>\n          indexedSteps.forEach((step) =>\n            stepTest.call(this, state, step, rowData)\n          )\n        )\n        .then(() => state.onFinishScenario(scenario));\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":76752,"duration":3217,"startedAt":"2023-09-06T10:03:43.962Z","screenshots":[]}]},{"title":["Validating TLS production site","Validate TLS LongReads Page"],"state":"passed","body":"function () {\n      const state = window.testState;\n      return cy\n        .then(() => state.onStartScenario(scenario, indexedSteps))\n        .then(() =>\n          resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n        )\n        .then(() =>\n          indexedSteps.forEach((step) =>\n            stepTest.call(this, state, step, rowData)\n          )\n        )\n        .then(() => state.onFinishScenario(scenario));\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":79976,"duration":1760,"startedAt":"2023-09-06T10:03:47.186Z","screenshots":[]}]},{"title":["Validating TLS production site","Validate TLS author page"],"state":"passed","body":"function () {\n      const state = window.testState;\n      return cy\n        .then(() => state.onStartScenario(scenario, indexedSteps))\n        .then(() =>\n          resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n        )\n        .then(() =>\n          indexedSteps.forEach((step) =>\n            stepTest.call(this, state, step, rowData)\n          )\n        )\n        .then(() => state.onFinishScenario(scenario));\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":81742,"duration":1437,"startedAt":"2023-09-06T10:03:48.952Z","screenshots":[]}]},{"title":["Validating TLS production site","Validate TLS category page"],"state":"passed","body":"function () {\n      const state = window.testState;\n      return cy\n        .then(() => state.onStartScenario(scenario, indexedSteps))\n        .then(() =>\n          resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n        )\n        .then(() =>\n          indexedSteps.forEach((step) =>\n            stepTest.call(this, state, step, rowData)\n          )\n        )\n        .then(() => state.onFinishScenario(scenario));\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":83186,"duration":2222,"startedAt":"2023-09-06T10:03:50.396Z","screenshots":[]}]},{"title":["Validating TLS production site","Validate TLS search page"],"state":"passed","body":"function () {\n      const state = window.testState;\n      return cy\n        .then(() => state.onStartScenario(scenario, indexedSteps))\n        .then(() =>\n          resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n        )\n        .then(() =>\n          indexedSteps.forEach((step) =>\n            stepTest.call(this, state, step, rowData)\n          )\n        )\n        .then(() => state.onFinishScenario(scenario));\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":85413,"duration":4742,"startedAt":"2023-09-06T10:03:52.623Z","screenshots":[]}]},{"title":["Validating TLS production site","Validate TLS current-issue page"],"state":"passed","body":"function () {\n      const state = window.testState;\n      return cy\n        .then(() => state.onStartScenario(scenario, indexedSteps))\n        .then(() =>\n          resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n        )\n        .then(() =>\n          indexedSteps.forEach((step) =>\n            stepTest.call(this, state, step, rowData)\n          )\n        )\n        .then(() => state.onFinishScenario(scenario));\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":90163,"duration":7728,"startedAt":"2023-09-06T10:03:57.373Z","screenshots":[]}]},{"title":["Validating TLS production site","Validate TLS header-footer page"],"state":"passed","body":"function () {\n      const state = window.testState;\n      return cy\n        .then(() => state.onStartScenario(scenario, indexedSteps))\n        .then(() =>\n          resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n        )\n        .then(() =>\n          indexedSteps.forEach((step) =>\n            stepTest.call(this, state, step, rowData)\n          )\n        )\n        .then(() => state.onFinishScenario(scenario));\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":97896,"duration":5505,"startedAt":"2023-09-06T10:04:05.106Z","screenshots":[]}]},{"title":["Validating TLS production site","Validate TLS article page"],"state":"passed","body":"function () {\n      const state = window.testState;\n      return cy\n        .then(() => state.onStartScenario(scenario, indexedSteps))\n        .then(() =>\n          resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n        )\n        .then(() =>\n          indexedSteps.forEach((step) =>\n            stepTest.call(this, state, step, rowData)\n          )\n        )\n        .then(() => state.onFinishScenario(scenario));\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":103405,"duration":13337,"startedAt":"2023-09-06T10:04:10.615Z","screenshots":[]}]}],"error":null,"video":"/Users/ksm/Documents/deployment/GitH/cypress-tls-bdd-accessiblity/TLS_E2E_Automation/cypress/videos/tlshealthcheck.feature.mp4","spec":{"fileExtension":".feature","baseName":"tlshealthcheck.feature","fileName":"tlshealthcheck","specFileExtension":".feature","relativeToCommonRoot":"tlshealthcheck.feature","specType":"integration","name":"cypress/e2e/TLSHEALTHCHECK/tlshealthcheck.feature","relative":"cypress/e2e/TLSHEALTHCHECK/tlshealthcheck.feature","absolute":"/Users/ksm/Documents/deployment/GitH/cypress-tls-bdd-accessiblity/TLS_E2E_Automation/cypress/e2e/TLSHEALTHCHECK/tlshealthcheck.feature"},"shouldUploadVideo":true}],"browserPath":"","browserName":"electron","browserVersion":"106.0.5249.51","osName":"darwin","osVersion":"22.6.0","cypressVersion":"12.17.3","config":{"projectId":"prise6","firstRun":true,"chromeWebSecurity":false,"screenshotsFolder":"/Users/ksm/Documents/deployment/GitH/cypress-tls-bdd-accessiblity/TLS_E2E_Automation/cypress/productionhealthcheckscreenshots","env":{"dev_url":"https://www.dev-the-tls.co.uk/","staging_url":"https://www.staging-the-tls.co.uk/","beta_url":"https://beta.the-tls.co.uk/","uat_url":"http://nu-ecs-wp-tls-uat.elb.iha-dev.ntch.co.uk/","prod_url":"https://www.the-tls.co.uk/","ENV":"healthcheck"},"viewportWidth":1200,"viewportHeight":660,"pageLoadTimeout":25000,"retries":{"runMode":1,"openMode":0},"trashAssetsBeforeRuns":true,"video":true,"setupNodeEvents":"[Function setupNodeEvents]","excludeSpecPattern":["*.js","*.md"],"specPattern":["cypress/e2e/**/*.{feature,features}","cypress/e2e/**/*.cy.js"],"projectRoot":"/Users/ksm/Documents/deployment/GitH/cypress-tls-bdd-accessiblity/TLS_E2E_Automation","projectName":"TLS_E2E_Automation","repoRoot":"/Users/ksm/Documents/deployment/GitH/cypress-tls-bdd-accessiblity","rawJson":{"projectId":"prise6","firstRun":true,"chromeWebSecurity":false,"screenshotsFolder":"cypress/productionhealthcheckscreenshots","env":{"dev_url":"https://www.dev-the-tls.co.uk/","staging_url":"https://www.staging-the-tls.co.uk/","beta_url":"https://beta.the-tls.co.uk/","uat_url":"http://nu-ecs-wp-tls-uat.elb.iha-dev.ntch.co.uk/","prod_url":"https://www.the-tls.co.uk/"},"viewportWidth":1200,"viewportHeight":660,"pageLoadTimeout":25000,"retries":{"runMode":1,"openMode":0},"trashAssetsBeforeRuns":true,"video":true,"e2e":{"setupNodeEvents":"[Function setupNodeEvents]","excludeSpecPattern":["*.js","*.md"],"specPattern":["cypress/e2e/**/*.{feature,features}","cypress/e2e/**/*.cy.js"]},"setupNodeEvents":"[Function setupNodeEvents]","excludeSpecPattern":["*.js","*.md"],"specPattern":["cypress/e2e/**/*.{feature,features}","cypress/e2e/**/*.cy.js"],"envFile":{},"projectRoot":"/Users/ksm/Documents/deployment/GitH/cypress-tls-bdd-accessiblity/TLS_E2E_Automation","projectName":"TLS_E2E_Automation","repoRoot":"/Users/ksm/Documents/deployment/GitH/cypress-tls-bdd-accessiblity"},"configFile":"cypress.config.js","morgan":false,"isTextTerminal":true,"socketId":"v4tmb7u0wo","report":true,"animationDistanceThreshold":5,"arch":"x64","baseUrl":null,"blockHosts":null,"clientCertificates":[],"defaultCommandTimeout":4000,"downloadsFolder":"/Users/ksm/Documents/deployment/GitH/cypress-tls-bdd-accessiblity/TLS_E2E_Automation/cypress/downloads","execTimeout":60000,"experimentalCspAllowList":false,"experimentalFetchPolyfill":false,"experimentalInteractiveRunEvents":false,"experimentalRunAllSpecs":false,"experimentalMemoryManagement":false,"experimentalModifyObstructiveThirdPartyCode":false,"experimentalSkipDomainInjection":null,"experimentalOriginDependencies":false,"experimentalSourceRewriting":false,"experimentalSingleTabRunMode":false,"experimentalStudio":false,"experimentalWebKitSupport":false,"fileServerFolder":"/Users/ksm/Documents/deployment/GitH/cypress-tls-bdd-accessiblity/TLS_E2E_Automation","fixturesFolder":"/Users/ksm/Documents/deployment/GitH/cypress-tls-bdd-accessiblity/TLS_E2E_Automation/cypress/fixtures","includeShadowDom":false,"keystrokeDelay":0,"modifyObstructiveCode":true,"numTestsKeptInMemory":0,"platform":"darwin","port":59355,"redirectionLimit":20,"reporter":"spec","reporterOptions":null,"requestTimeout":5000,"resolvedNodePath":"/usr/local/bin/node","resolvedNodeVersion":"16.15.0","responseTimeout":30000,"screenshotOnRunFailure":true,"slowTestThreshold":10000,"scrollBehavior":"top","supportFile":"/Users/ksm/Documents/deployment/GitH/cypress-tls-bdd-accessiblity/TLS_E2E_Automation/cypress/support/e2e.js","supportFolder":"/Users/ksm/Documents/deployment/GitH/cypress-tls-bdd-accessiblity/TLS_E2E_Automation/cypress/support","taskTimeout":60000,"testIsolation":true,"userAgent":null,"videoCompression":32,"videosFolder":"/Users/ksm/Documents/deployment/GitH/cypress-tls-bdd-accessiblity/TLS_E2E_Automation/cypress/videos","videoUploadOnPasses":true,"waitForAnimations":true,"watchForFileChanges":false,"additionalIgnorePattern":[],"autoOpen":false,"browsers":[{"name":"chrome","family":"chromium","channel":"stable","displayName":"Chrome","version":"116.0.5845.140","path":"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome","minSupportedVersion":64,"majorVersion":"116"},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"106.0.5249.51","path":"","majorVersion":106}],"clientRoute":"/__/","cypressBinaryRoot":"/Users/ksm/Library/Caches/Cypress/12.17.3/Cypress.app/Contents/Resources/app","devServerPublicPathRoute":"/__cypress/src","hosts":null,"isInteractive":true,"namespace":"__cypress","reporterRoute":"/__cypress/reporter","socketIoCookie":"__socket","socketIoRoute":"/__socket","version":"12.17.3","cypressEnv":"production","resolved":{"animationDistanceThreshold":{"value":5,"from":"default"},"arch":{"value":"x64","from":"default"},"baseUrl":{"value":null,"from":"default"},"blockHosts":{"value":null,"from":"default"},"chromeWebSecurity":{"value":false,"from":"config"},"clientCertificates":{"value":[],"from":"default"},"defaultCommandTimeout":{"value":4000,"from":"default"},"downloadsFolder":{"value":"cypress/downloads","from":"default"},"env":{"dev_url":{"value":"https://www.dev-the-tls.co.uk/","from":"config"},"staging_url":{"value":"https://www.staging-the-tls.co.uk/","from":"config"},"beta_url":{"value":"https://beta.the-tls.co.uk/","from":"config"},"uat_url":{"value":"http://nu-ecs-wp-tls-uat.elb.iha-dev.ntch.co.uk/","from":"config"},"prod_url":{"value":"https://www.the-tls.co.uk/","from":"config"},"ENV":{"value":"healthcheck","from":"cli"}},"execTimeout":{"value":60000,"from":"default"},"experimentalCspAllowList":{"value":false,"from":"default"},"experimentalFetchPolyfill":{"value":false,"from":"default"},"experimentalInteractiveRunEvents":{"value":false,"from":"default"},"experimentalRunAllSpecs":{"value":false,"from":"default"},"experimentalMemoryManagement":{"value":false,"from":"default"},"experimentalModifyObstructiveThirdPartyCode":{"value":false,"from":"default"},"experimentalSkipDomainInjection":{"value":null,"from":"default"},"experimentalOriginDependencies":{"value":false,"from":"default"},"experimentalSourceRewriting":{"value":false,"from":"default"},"experimentalSingleTabRunMode":{"value":false,"from":"default"},"experimentalStudio":{"value":false,"from":"default"},"experimentalWebKitSupport":{"value":false,"from":"default"},"fileServerFolder":{"value":"","from":"default"},"fixturesFolder":{"value":"cypress/fixtures","from":"default"},"excludeSpecPattern":{"value":["*.js","*.md"],"from":"config"},"includeShadowDom":{"value":false,"from":"default"},"keystrokeDelay":{"value":0,"from":"default"},"modifyObstructiveCode":{"value":true,"from":"default"},"nodeVersion":{"from":"default"},"numTestsKeptInMemory":{"value":0,"from":"config"},"platform":{"value":"darwin","from":"default"},"pageLoadTimeout":{"value":25000,"from":"config"},"port":{"value":null,"from":"default"},"projectId":{"value":"prise6","from":"config"},"redirectionLimit":{"value":20,"from":"default"},"reporter":{"value":"spec","from":"default"},"reporterOptions":{"value":null,"from":"default"},"requestTimeout":{"value":5000,"from":"default"},"resolvedNodePath":{"value":null,"from":"default"},"resolvedNodeVersion":{"value":null,"from":"default"},"responseTimeout":{"value":30000,"from":"default"},"retries":{"value":{"runMode":1,"openMode":0},"from":"config"},"screenshotOnRunFailure":{"value":true,"from":"default"},"screenshotsFolder":{"value":"cypress/productionhealthcheckscreenshots","from":"config"},"slowTestThreshold":{"value":10000,"from":"default"},"scrollBehavior":{"value":"top","from":"default"},"supportFile":{"value":"cypress/support/e2e.{js,jsx,ts,tsx}","from":"default"},"supportFolder":{"value":false,"from":"default"},"taskTimeout":{"value":60000,"from":"default"},"testIsolation":{"value":true,"from":"default"},"trashAssetsBeforeRuns":{"value":true,"from":"default"},"userAgent":{"value":null,"from":"default"},"video":{"value":true,"from":"default"},"videoCompression":{"value":32,"from":"default"},"videosFolder":{"value":"cypress/videos","from":"default"},"videoUploadOnPasses":{"value":true,"from":"default"},"viewportHeight":{"value":660,"from":"default"},"viewportWidth":{"value":1200,"from":"config"},"waitForAnimations":{"value":true,"from":"default"},"watchForFileChanges":{"value":false,"from":"config"},"specPattern":{"value":["cypress/e2e/**/*.{feature,features}","cypress/e2e/**/*.cy.js"],"from":"config"},"browsers":{"value":[{"name":"chrome","family":"chromium","channel":"stable","displayName":"Chrome","version":"116.0.5845.140","path":"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome","minSupportedVersion":64,"majorVersion":"116"},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"106.0.5249.51","path":"","majorVersion":106,"isHeadless":true,"isHeaded":false}],"from":"runtime"},"hosts":{"value":null,"from":"default"},"isInteractive":{"value":true,"from":"default"}},"testingType":"e2e","remote":{"origin":"http://localhost:59355","strategy":"file","fileServer":"http://localhost:59356","domainName":"localhost","props":null},"browser":null,"specs":[],"proxyUrl":"http://localhost:59355","browserUrl":"http://localhost:59355/__/","reporterUrl":"http://localhost:59355/__cypress/reporter","proxyServer":"http://localhost:59355","state":{}}}